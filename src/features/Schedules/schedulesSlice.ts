import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState } from 'app/store';

export interface SchedulesSlice {
  status: 'idle' | 'loading' | 'failed';
  code: number;
  data: any;
}

const initialState: SchedulesSlice = {
  status: 'loading',
  code: 200,
  data: {}
};

const schedulesSlice = createSlice({
  name: 'schedules',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setSchedules: (state: SchedulesSlice, { payload }: PayloadAction<any>) => {
      state.data = payload;
    }
    // *** WRAPPER HANDLING ***
  }
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

const { setSchedules } = schedulesSlice.actions;

const selectSchedules = ({ schedules }: RootState) => schedules.data;

export { setSchedules, selectSchedules };

export default schedulesSlice.reducer;
