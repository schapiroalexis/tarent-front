import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState } from 'app/store';

export interface CoursesState {
  status: 'idle' | 'loading' | 'failed';
  code: number;
  data: any;
}

const initialState: CoursesState = {
  status: 'loading',
  code: 200,
  data: {}
};

const coursesSlice = createSlice({
  name: 'courses',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setCourses: (state: CoursesState, { payload }: PayloadAction<any>) => {
      state.data = payload;
    }
    // *** WRAPPER HANDLING ***
  }
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

const { setCourses } = coursesSlice.actions;

const selectCourses = ({ courses }: RootState) => courses.data;

export { setCourses, selectCourses };

export default coursesSlice.reducer;
